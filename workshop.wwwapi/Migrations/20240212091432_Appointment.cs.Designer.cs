// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240212091432_Appointment.cs")]
    partial class Appointmentcs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("workshop.wwwapi.Models.AppointmentModels.Appointment", b =>
                {
                    b.Property<DateTime>("Booking")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("booking");

                    b.Property<int>("DoctorId")
                        .HasColumnType("integer")
                        .HasColumnName("doctor_id");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer")
                        .HasColumnName("patient_id");

                    b.HasKey("Booking", "DoctorId", "PatientId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            Booking = new DateTime(2024, 2, 29, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3671),
                            DoctorId = 2,
                            PatientId = 5
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 23, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3689),
                            DoctorId = 4,
                            PatientId = 4
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 14, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3692),
                            DoctorId = 5,
                            PatientId = 2
                        },
                        new
                        {
                            Booking = new DateTime(2024, 3, 1, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3693),
                            DoctorId = 2,
                            PatientId = 7
                        },
                        new
                        {
                            Booking = new DateTime(2024, 3, 1, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3695),
                            DoctorId = 5,
                            PatientId = 3
                        },
                        new
                        {
                            Booking = new DateTime(2024, 3, 6, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3699),
                            DoctorId = 2,
                            PatientId = 9
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 26, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3701),
                            DoctorId = 4,
                            PatientId = 9
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 27, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3703),
                            DoctorId = 5,
                            PatientId = 3
                        },
                        new
                        {
                            Booking = new DateTime(2024, 3, 5, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3705),
                            DoctorId = 2,
                            PatientId = 7
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 24, 9, 14, 31, 437, DateTimeKind.Utc).AddTicks(3708),
                            DoctorId = 2,
                            PatientId = 3
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.DoctorModels.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Mick Trump"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Mick Winslet"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Barack Hepburn"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Oprah Winslet"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Jimi Winfrey"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PatientModels.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Donald Hepburn"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Jimi Windsor"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Jimi Hendrix"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Audrey Obama"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Elvis Hendrix"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Kate Hepburn"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Charles Presley"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Kate Obama"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Charles Winslet"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Elvis Windsor"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.AppointmentModels.Appointment", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.DoctorModels.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.PatientModels.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.DoctorModels.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PatientModels.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
